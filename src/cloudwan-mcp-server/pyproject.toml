[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "awslabs.cloudwan-mcp-server"
version = "1.0.0"
description = "AWS CloudWAN MCP Server - Advanced network analysis and troubleshooting tools for AWS CloudWAN"
authors = [
    {name = "AWS Labs", email = "awslabs@amazon.com"}
]
readme = "README.md"
license = {text = "Apache-2.0"}
license-files = ["LICENSE", "NOTICE"]
requires-python = ">=3.11"
dependencies = [
    "boto3>=1.35.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "loguru>=0.7.0",
    "mcp[cli]>=1.11.0",
    "networkx>=3.5",
    "diagrams>=0.24.4",
    "graphviz>=0.20.3",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators", 
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
[project.urls]
homepage = "https://awslabs.github.io/cloudwan-mcp/"
documentation = "https://awslabs.github.io/cloudwan-mcp/docs/"
repository = "https://github.com/awslabs/cloudwan-mcp"

[project.optional-dependencies]
fastmcp = [
    "fastmcp>=0.3.0",
]

[project.scripts]
# AWS Labs standard entry points for uvx
awslabs-cloudwan-mcp-server = "awslabs.cloudwan_mcp_server.__main__:main"
cloudwan-mcp-server = "awslabs.cloudwan_mcp_server.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["awslabs"]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "moto[ec2,networkmanager]>=4.2.0",
    "ruff>=0.9.7",
    "pyright>=1.1.398",
    "pre-commit>=4.1.0",
    "commitizen>=4.2.2",
    "psutil>=7.0.0",
]

[tool.ruff]
line-length = 88

[tool.pyright]
include = ["awslabs", "tests"]
exclude = ["**/__pycache__", "**/.uv/**", "**/.venv/**", "tools/**"]

[tool.pytest.ini_options]
addopts = "--cov=awslabs --cov-report=term-missing"
asyncio_mode = "auto"
markers = [
    "asyncio: marks tests as async tests",
    "slow: marks tests as slow tests",
    "slowtest: marks tests as performance/slow tests (alias for slow)", 
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "security: marks tests for security-related tests",
    "live: marks tests requiring live AWS credentials",
    "aws_labs: marks tests following AWS Labs patterns",  # Added
    "aws_labs_failures: categorize AWS Labs compliance failures",  # New category
    "compliance: marks regulatory/compliance validation tests",
    "performance: marks performance benchmarking tests",
    "concurrent: marks concurrent operation tests",
    "mock: marks tests using mocked AWS services",
    "moto: marks tests using moto framework",
    "fixture_validation: marks tests validating fixture integrity"  # Added validation
]

[tool.coverage.run]
source = ["awslabs"]

[tool.coverage.report]
skip_covered = true
show_missing = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "awslabs/cloudwan_mcp_server/__init__.py:__version__"
]
bump_message = "bump: version $current_version â†’ $new_version"
